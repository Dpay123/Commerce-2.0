name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12.12
        env:
          POSTGRES_USER: ${{ secrets.MY_POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.MY_POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.MY_POSTGRES_DB }}
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v3
      with:
          fetch-depth: 0
    - name: Set up Python 3.9.13
      uses: actions/setup-python@v3
      with:
        python-version: "3.9.13"
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run migrations
      run: python manage.py migrate
    - name: Run Tests
      run: |
        python manage.py test auctions
    - name: Deploy to Heroku
      env:
        HEROKU_API_TOKEN: ${{ secrets.HEROKU_API_TOKEN }}
        HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
      if: github.ref == 'refs/heads/main' && job.status == 'success'
      run: |
        git remote add heroku https://heroku:$HEROKU_API_TOKEN@git.heroku.com/$HEROKU_APP_NAME.git
        git push heroku HEAD:main -f
    - name: Reset Production Database
      run: |
        heroku run python manage.py flush --no-input
        heroku run python manage.py migrate
        heroku run python manage.py loaddata db.json
